name: Deploy to Cloud Run

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REPOSITORY: ${{ vars.REPOSITORY }}
  REGION: ${{ vars.REGION }}
  API_HOST: ${{ vars.API_HOST }}

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create production env file
        run: |
          mkdir -p src/environments
          printf '%s\n' "${{ vars.ENV }}" > src/environments/production.ts

      - name: Render nginx.conf from template
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base
          envsubst '${API_HOST}' < nginx.conf.template > nginx.conf

      - name: Check the nginx configuration
        run: |
          cat nginx.conf

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build & push image
        id: build
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/web:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/web:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
            service: ${{ env.REPOSITORY }}-web
            region: ${{ env.REGION }}
            image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/web:${{ github.sha }}